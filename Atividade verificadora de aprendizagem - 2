# 2. Voltando ao cenário apresentado na situação-problema, que trata de um sistema de registro de notas de alunos em uma pequena instituição de ensino, desenvolver uma solução capaz de persistir (inserir) e ler os dados de notas de alunos em arquivos. #

# Dados Alunos #
def cadastrar_aluno():
    nome = input("Nome do aluno: ")
    email = input("Email do aluno: ")
    curso = input("Curso do aluno: ")

    with open("alunos.txt", "a") as arquivo:
        arquivo.write(f"{nome},{email},{curso}\n")

    print("Aluno cadastrado com sucesso!")


def listar_alunos():
    try:
        with open("alunos.txt", "r") as arquivo:
            for linha in arquivo:
                nome, email, curso = linha.strip().split(',')
                print(f"Nome: {nome}, Email: {email}, Curso: {curso}")
    except FileNotFoundError:
        print("Nenhum aluno cadastrado.")


def buscar_aluno_por_nome():
    nome_busca = input("Digite o nome do aluno a ser buscado: ")

    try:
        with open("alunos.txt", "r") as arquivo:
            encontrado = False
            for linha in arquivo:
                nome, email, curso = linha.strip().split(',')
                if nome.lower() == nome_busca.lower():
                    print(f"Nome: {nome}, Email: {email}, Curso: {curso}")
                    encontrado = True
                    break
            if not encontrado:
                print("Aluno não encontrado.")
    except FileNotFoundError:
        print("Nenhum aluno cadastrado.")


def main():
    while True:
        print("\nOpções:")
        print("1 - Cadastrar novo aluno")
        print("2 - Listar alunos cadastrados")
        print("3 - Buscar aluno pelo nome")
        print("4 - Sair")

        opcao = input("Escolha uma opção: ")

        if opcao == '1':
            cadastrar_aluno()
        elif opcao == '2':
            listar_alunos()
        elif opcao == '3':
            buscar_aluno_por_nome()
        elif opcao == '4':
            break
        else:
            print("Opção inválida. Escolha novamente.")


if __name__ == "__main__":
    main()
